---
- hosts: all
  become: yes
  become_user: root
  tasks:

  - name: Copy resolv file nameserver
    template:
     src: template/resolv-mgn.conf.j2
     dest: /etc/resolv.conf
     owner: root
     group: root
     mode: "0644"
    when: ansible_connection == 'local'

  - name: Install bind
    yum:     
      name: bind     
      state: latest    
    when: ansible_connection == 'local'

  - name: Edit file 
    lineinfile:
      path: /etc/named.conf
      regexp: 'listen-on port 53 { 127.0.0.1; };'
      line:  '       listen-on port 53 {127.0.0.1; 192.168.100.11;};'
      backup: yes
    when: ansible_connection == 'local'

  - name: Edit nameserver allow query
    lineinfile:
      path: /etc/named.conf
      regexp: '	allow-query     { localhost; };'
      line:  '  	allow-query  { any; };     '
      backup: yes
    when: ansible_connection == 'local'

  - name: Edit nameserver include query
    lineinfile: 
      path: /etc/named.conf
      line:  '  include "/etc/named/named.conf.local";'
      backup: yes
    when: ansible_connection == 'local'

  - name: Create template
    template:
      src: template/named.conf.local.j2
      dest : /etc/named/named.conf.local
      owner: root
      group: root
      mode: "0755"
      backup: yes
    when: ansible_connection == 'local'

  - name: Create Zone directory in /etc/named
    file:
      path: /etc/named/zones
      state: directory
      mode: 0755
    when: ansible_connection == 'local'
  
  - name: Copy forward and revest zone file to /etc/named/zones
    template:
      src: '{{ item.source }}'
      dest : '{{ item.destination }}'
      owner: root
      group: root
      mode: "0755"
    loop:
    - { source: 'template/db.mynet-887.com.j2', destination: '/etc/named/zones/db.mynet-887.com'}
    - { source: 'template/db.192.168.100.j2', destination: '/etc/named/zones/db.192.168.100'}
    - { source: 'template/db.my-site.com.j2', destination: '/etc/named/zones/db.my-site.com'}

    when: ansible_connection == 'local'

  - name: Start service
    service:
        name: named
        state: started
    when: ansible_connection == 'local'

  - name: Start firewalld
    service:
        name: firewalld
        state: started  
    when: ansible_connection == 'local'

  - name: Open firewalld
    firewalld:
       port: '{{ item }}'
       permanent: yes
       state: enabled
    loop:
        - "53/udp" 
        - "53/tcp" 
    when: ansible_connection == 'local'
   

  - name: Start firewalld
    service:
        name: firewalld
        state: restarted  
    when: ansible_connection == 'local'

  - name: Copy resolv file 
    template:
     src: template/resolv.conf.j2
     dest: /etc/resolv.conf
     owner: root
     group: root
     mode: "0644"

  - name: Install Bind-Utils all Server
    yum:
       name: bind-utils
       state: latest


- hosts: web
  become: yes
  become_user: root

  tasks:
  - name: Install remi repo.
    yum:
      name: http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
      state: present

  - name: Import remi GPG key.
    rpm_key:
      key: http://rpms.remirepo.net/RPM-GPG-KEY-remi
      state: present

  - name: Install httpd and php 7.3 and module  
    yum:
      name:
        - httpd
        - php
        - php-curl
        
      state: latest
      enablerepo: remi-php73  

  - name: Edit file Timezone
    lineinfile:
     path: /etc/php.ini
     regexp: ';date.timezone'
     line: 'date.timezone = Asia/Bangkok'
     backup: yes

  - name: Enable service httpd
    service:
        name: httpd
        enabled: yes

  - name: Start service httpd
    service:
        name: httpd
        state: started

  - name: Enable firewalld
    service:
        name: firewalld
        enabled: yes
    
  - name: Start firewall
    service:
        name: firewalld
        state: started
    
  - name: Open firewall service http and https
    firewalld:
        service: '{{ item }}'
        permanent: yes
        state: enabled
    loop:
        - "http"
        - "https"

  - name: Restart firewalld
    service:
        name:  firewalld
        state:  restarted

  - name: Copy index.php to web.server
    template:
     src: template/index.php.j2
     dest: /var/www/html/index.php
     owner: root
     group: root
     mode: 0755

- hosts: db
  become: yes
  become_user: root
  tasks:

  - name: Install nfs-utils
    yum:  
      name: nfs-utils
      state: latest  

  - name: Edit file 
    lineinfile:
      path: /etc/exports
      line:  '/var/nfs  *(rw,sync,no_root_squash,no_all_squash)'

  - name: Create dir nfs
    file:
      path: '/var/nfs'
      state: directory
      owner: nfsnobody
      group: nfsnobody
      mode: 0755

  - name: Enable service rpcbind
    service:
        name: rpcbind
        enabled: yes

  - name: Start service rpcbind
    service:
        name: rpcbind
        state: started

  - name: Enable service nfs-server
    service:
        name: nfs-server
        enabled: yes

  - name: Start service nfs-server
    service:
        name: nfs-server
        state: started

  - name: Enable service nfs-lock
    service:
        name: nfs-lock
        enabled: yes

  - name: Start service nfs-lock
    service:
        name: nfs-lock
        state: started

  - name: Open firewall service mountd and rpc-binds and nfs
    firewalld:
        service: '{{ item }}'
        permanent: yes
        state: enabled
    loop:
        - "mountd"
        - "rpc-bind"
        - "nfs"

  - name: Restart firewalld
    service:
        name: firewalld
        state: restarted

  - name: Create dir nfs/www
    file:
      path: '/var/nfs/www'
      state: directory
      mode: 0755
       
  - name : Create directory html
    file:
      path: /var/nfs/www/{{ item }}/html
      state: directory
      mode: 0755
    loop:
      - my-site.com
      - mynet-887.com   
    
  - name : Create directory log
    file:
      path: /var/nfs/www/{{ item }}/log
      state: directory
      mode: 0755
    loop:
      - my-site.com
      - mynet-887.com

  - name: Copy index.php to web.server
    template:
     src: template/index.php.j2
     dest: /var/nfs/www/my-site.com/html/index.php
     owner: nfsnobody
     group: nfsnobody
     mode: 0755

  - name: Copy index.php to web.server
    template:
     src: template/index.php.j2
     dest: /var/nfs/www/mynet-887.com/html/index.php
     owner: nfsnobody
     group: nfsnobody
     mode: 0755


- hosts: web
  become: yes
  become_user: root
  tasks:
  
  - name: Install nfs-utils
    yum:  
      name: nfs-utils
      state: latest 
 
  - name: Create dir nfs/www
    file:
      path: '/var/nfs/www'
      state: directory
      mode: 0755    

  - name: Create dir log 887
    file:
      path: '/var/nfs/www/mynet-887.com/log'
      state: directory
      mode: 0755
  - name: Create dir html 887
    file:
      path: '/var/nfs/www/mynet-887.com/html'
      state: directory
      mode: 0755

  - name: Create dir log site
    file:
      path: '/var/nfs/www/my-site.com/log'
      state: directory
      mode: 0755

  - name: Create dir html site
    file:
      path: '/var/nfs/www/my-site.com/html'
      state: directory
      mode: 0755    

#  - name : Create directory nfs
#    command: mount 192.168.100.70:/var/nfs /var/nfs/www

  - name : Create directory html
    file:
      path: /var/www/{{ item }}/html
      state: directory
      mode: 0755
    loop:
      - my-site.com
      - mynet-887.com
    
  - name : Create directory log
    file:
      path: /var/www/{{ item }}/log
      state: directory
      mode: 0755
    loop:
      - my-site.com
      - mynet-887.com

  - name: Copy wed01
    template:
      src: '{{ item.source }}'
      dest : '{{ item.destination }}'
      owner: root
      group: root
      mode: "0755"
    loop:
    - { source: 'template/mynet-01.com.conf.j2', destination: '/etc/httpd/conf.d/mynet-887.com.conf'}
    - { source: 'template/my-site01.com.conf.j2', destination: '/etc/httpd/conf.d/my-site.com.conf'}

    when: ansible_ssh_host == '192.168.100.81'
  
  - name: Copy web02
    template:
      src: '{{ item.source }}'
      dest : '{{ item.destination }}'
      owner: root
      group: root
      mode: "0755"
    loop:
    - { source: 'template/mynet-02.com.conf.j2', destination: '/etc/httpd/conf.d/mynet-887.com.conf'}
    - { source: 'template/my-site02.com.conf.j2', destination: '/etc/httpd/conf.d/my-site.com.conf'}

    when: ansible_ssh_host == '192.168.100.82'

  - name: Copy index.php to web.server
    template:
     src: template/index.php.j2
     dest: /var/nfs/www/my-site.com/html/index.php
     owner: nfsnobody
     group: nfsnobody
     mode: 0755

  - name: Copy index.php to web.server
    template:
     src: template/index.php.j2
     dest: /var/nfs/www/mynet-887.com/html/index.php
     owner: nfsnobody
     group: nfsnobody
     mode: 0755

  - name: Start service httpd
    service:
        name: httpd
        state: restarted

- hosts: lb
  become: yes
  become_user: root
  tasks:
  
  - name: Install nginx
    yum:  
      name: nginx
      state: latest 

  - name: Enable firewalld
    service:
        name: firewalld
        enabled: yes
    
  - name: Start firewall
    service:
        name: firewalld
        state: started

  - name: Enable nginx
    service:
        name: nginx
        enabled: yes
    
  - name: Start nginx
    service:
        name: nginx
        state: started

  - name: Open firewalld
    firewalld:
       port: '{{ item }}'
       permanent: yes
       state: enabled
    loop:
        - "80/tcp" 
  
  - name: Open firewall service http and https
    firewalld:
        service: '{{ item }}'
        permanent: yes
        state: enabled
    loop:
        - "http"
        - "https"
  
  - name: Copy wed01
    template:
      src: '{{ item.source }}'
      dest : '{{ item.destination }}'
      owner: root
      group: root
      mode: "0755"
    loop:
    - { source: 'template/my-net.conf.j2', destination: '/etc/nginx/conf.d/my-net.conf'}
    - { source: 'template/my-site.conf.j2', destination: '/etc/nginx/conf.d/my-site.conf'}

  - name: Restart nginx
    service:
        name:  nginx
        state:  restarted
        
  - name: Restart firewalld
    service:
        name:  firewalld
        state:  restarted

- hosts: all
  become: yes
  become_user: root
  tasks:
  
  - name: Install rsyslog
    yum:  
      name: rsyslog
      state: latest 

  - name: Enable rsyslog
    service:
        name: rsyslog
        enabled: yes
    
  - name: Start rsyslog
    service:
        name: rsyslog
        state: started

  - name: Copy rsyslog.conf.j2
    template:
     src: template/rsyslog.conf.j2
     dest: /etc/rsyslog.conf
     owner: root
     group: root
     mode: 0755

  - name: Edit file rsyslog.conf.j2
    lineinfile:
     path: /etc/rsyslog.conf
     regexp: '#*.* @@remote-host:514'
     line: '*.* @192.168.100.11:514'
  
  - name: reStart service rsyslog
    service:
        name: rsyslog
        state: restarted

  - name: Enable firewalld
    service:
        name: firewalld
        enabled: yes
    
  - name: Start firewall
    service:
        name: firewalld
        state: started

  - name: Open firewalld
    firewalld:
       port: '{{ item }}'
       permanent: yes
       state: enabled
    loop:
        - "514/tcp" 
        - "514/udp" 

 
  - name: Start firewall
    service:
        name: firewalld
        state: restarted
 #sudo su -u
 #cp /etc/rsyslog.conf /vagrant/ansible/template/rsyslog.conf.j2
 #sudo yum remove bind -y
 #vagrant ssh ansible
 #cd /vagrant/ansible

